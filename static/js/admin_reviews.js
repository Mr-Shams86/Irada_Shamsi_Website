// –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
document.addEventListener("DOMContentLoaded", fetchAdminReviews);

// –î–æ—Å—Ç–∞—ë–º —Ç–æ–∫–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑ query (?token=...)
const urlParams = new URLSearchParams(window.location.search);
const token = urlParams.get("token");

// ---- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ / —Ö–µ–ª–ø–µ—Ä—ã -------
const DEFAULT_AVATAR = '/static/images/default-avatar.2025-10-17.png';

function isHttp(url) {
  return typeof url === 'string' && /^https?:\/\//i.test(url);
}
function isLocal(url) {
  return typeof url === 'string' && url.startsWith('/');
}
function escapeHTML(s = '') {
  return String(s)
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

// ---- –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ -----------
async function fetchAdminReviews() {
  const container = document.getElementById("admin-reviews-container");
  if (!container) return;

  try {
    const res = await fetch(`/admin/reviews/list?token=${encodeURIComponent(token)}`);
    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");

    const reviews = await res.json();

    if (!reviews.length) {
      container.innerHTML = '<p style="color:#999">–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üòå</p>';
      return;
    }

    container.innerHTML = "";
    reviews.forEach(review => {
      // --- –≤—ã–±–æ—Ä src –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏
      let avatarSrc = DEFAULT_AVATAR;
      if (isLocal(review.photo_url)) {
        // —Å–≤–µ–∂–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∞–≤—ã ‚Äî —Å bust, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–∏–ª–∏–ø–∞–ª –∫–µ—à
        avatarSrc = `${review.photo_url}?v=${Date.now()}`;
      } else if (isHttp(review.photo_url)) {
        // –≤–Ω–µ—à–Ω–∏–µ URL, –µ—Å–ª–∏ –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª–∏
        avatarSrc = review.photo_url;
      }

      // --- –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
      const displayName = escapeHTML(review.full_name || review.username || '–ê–Ω–æ–Ω–∏–º');
      const messageSafe = escapeHTML(review.message);

      // --- —Ä–∞–∑–º–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
      const div = document.createElement("div");
      div.classList.add("admin-review");
      
      div.innerHTML = `
        <div class="telegram-user">
          <img
            src="${avatarSrc}"
            alt="${displayName}"
            class="avatar"
            loading="lazy"
            onerror="this.onerror=null;this.src='${DEFAULT_AVATAR}'"
          >
          <strong>${displayName}</strong>
        </div>

        <div class="telegram-rating">–û—Ü–µ–Ω–∫–∞: ${review.rating} ‚≠ê</div>
        <p class="telegram-text">${messageSafe}</p>

        <div class="moderation-buttons">
          <button onclick="approveReview(${review.id})" class="btn-approve">‚úÖ –û–¥–æ–±—Ä–∏—Ç—å</button>
          <button onclick="deleteReview(${review.id})" class="btn-delete">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
        </div>
      `;

      container.appendChild(div);
    });
  } catch (err) {
    console.error('[AdminReviews] load failed:', err);
    container.innerHTML = '<p style="color:red">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤</p>';
  }
}

// ---- –î–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ -----------------------------------------------------
async function approveReview(id) {
  if (!confirm('–û–¥–æ–±—Ä–∏—Ç—å –æ—Ç–∑—ã–≤?')) return;
  await fetch(`/admin/reviews/${id}/approve?token=${encodeURIComponent(token)}`, {
    method: 'POST',
  });
  fetchAdminReviews();
}

async function deleteReview(id) {
  if (!confirm('–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤?')) return;
  await fetch(`/admin/reviews/${id}?token=${encodeURIComponent(token)}`, {
    method: 'DELETE',
  });
  fetchAdminReviews();
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –º–æ–≥–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å
window.approveReview = approveReview;
window.deleteReview = deleteReview;

