// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–∑—ã–≤—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", fetchAdminReviews);

const urlParams = new URLSearchParams(window.location.search);
const token = urlParams.get("token");

async function fetchAdminReviews() {
  const container = document.getElementById("admin-reviews-container");
  try {
    const res = await fetch(`/admin/reviews/list?token=${token}`);
    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
    const reviews = await res.json();

    if (!reviews.length) {
      container.innerHTML = '<p style="color:#999">–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ üòå</p>';
      return;
    }

    container.innerHTML = "";
    reviews.forEach(review => {
      console.log(">> review.photo_url", review.photo_url); // üëà –î–æ–±–∞–≤—å —ç—Ç–æ
      const div = document.createElement("div");
      div.classList.add("admin-review");
      div.innerHTML = `
        <div class="telegram-user">
          <img src="${review.photo_url && review.photo_url.startsWith('/') ? review.photo_url : '/static/images/default-avatar.png'}" class="avatar" onerror="this.onerror=null;this.src='/static/images/default-avatar.png';">
          <strong>${review.full_name || review.username || '–ê–Ω–æ–Ω–∏–º'}</strong>
        </div>
        <div class="telegram-rating">–û—Ü–µ–Ω–∫–∞: ${review.rating} ‚≠ê</div>
        <p class="telegram-text">${review.message}</p>
        <div class="moderation-buttons">
          <button onclick="approveReview(${review.id})" class="btn-approve">‚úÖ –û–¥–æ–±—Ä–∏—Ç—å</button>
          <button onclick="deleteReview(${review.id})" class="btn-delete">üóë –£–¥–∞–ª–∏—Ç—å</button>
        </div>`;
      container.appendChild(div);
    });
  } catch (err) {
    container.innerHTML = '<p style="color:red">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤</p>';
  }
}

async function approveReview(id) {
  if (!confirm("–û–¥–æ–±—Ä–∏—Ç—å –æ—Ç–∑—ã–≤?")) return;
  await fetch(`/admin/reviews/${id}/approve?token=${token}`, {
    method: "POST"
  });
  fetchAdminReviews();
}

async function deleteReview(id) {
  if (!confirm("–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤?")) return;
  await fetch(`/admin/reviews/${id}?token=${token}`, {
    method: "DELETE"
  });
  fetchAdminReviews();
}



