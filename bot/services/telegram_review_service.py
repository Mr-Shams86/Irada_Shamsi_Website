import aiohttp
import os

from pathlib import Path
from os.path import basename


BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

TELEGRAM_API = f"https://api.telegram.org"
STATIC_AVATARS_DIR = Path("static/images/review_avatars")


async def download_telegram_file(file_path: str, filename: str) -> str:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª —Å Telegram API –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ static)
    """
    url = f"{TELEGRAM_API}/file/bot{BOT_TOKEN}/{file_path}"

    filename = basename(file_path)
    local_path = STATIC_AVATARS_DIR / filename

    STATIC_AVATARS_DIR.mkdir(parents=True, exist_ok=True)

    print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑: {url}")

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status != 200:
                raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª: {resp.status}")
            with open(local_path, "wb") as f:
                f.write(await resp.read())

    print(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {local_path}")
    return f"/static/images/review_avatars/{filename}"
